<idea-plugin url="https://gitee.com/lrucase_group/intellij-gitee">
    <id>org.intellij.gitee</id>
    <vendor email="likui@oschina.cn">码云</vendor>
    <name>Gitee</name>
    <version>2020.1.1</version>
    <description>
        <![CDATA[
      Allows working with <a href="http://gitee.com/" >码云 - Gitee</a>
      There are some features just like the <a href="http://github.com/">GitHub</a> plugin.
      ]]>
    </description>
    <change-notes>
        <![CDATA[
        <i>2020.1.1</i>
        <ul>
          <li>Compatible with idea-2020.1 </li>
          <li>Remove some deprecated api </li>
        </ul>
        <i>2020.1.0</i>
        <ul>
          <li>Compatible with idea-2020.x </li>
        </ul>
        <i>2019.3.5</i>
        <ul>
          <li>Make PR viewer enabled.</li>
          <li>Limit oauth2 login name to email.</li>
        </ul>
      ]]>
    </change-notes>

    <idea-version since-build="201.*" until-build="*.*"/>
    <depends>com.intellij.modules.lang</depends>
    <depends>Git4Idea</depends>
    <depends optional="true" config-file="GiteeTracker.xml">com.intellij.tasks</depends>

    <!-- //////////////////////////////////////////////////////////////////////////////////// -->

    <extensions defaultExtensionNs="com.intellij">
        <applicationService serviceImplementation="com.gitee.util.GiteeSettings"/>

        <applicationService serviceImplementation="com.gitee.authentication.accounts.GiteeAccountManager"/>
        <applicationService serviceImplementation="com.gitee.authentication.GiteeAuthenticationManager"/>
        <applicationService serviceImplementation="com.gitee.api.GiteeApiRequestExecutor$Factory"/>
        <applicationService serviceImplementation="com.gitee.api.GiteeApiRequestExecutorManager"/>
        <applicationService serviceImplementation="com.gitee.authentication.accounts.GiteeAccountInformationProvider"/>

        <applicationService serviceImplementation="com.gitee.util.GiteeGitHelper"/>
        <applicationService serviceImplementation="com.gitee.util.CachingGiteeUserAvatarLoader"/>
        <applicationService serviceImplementation="com.gitee.util.GiteeImageResizer"/>

        <projectService serviceImplementation="com.gitee.extensions.GiteeAccountGitAuthenticationFailureManager"/>
        <projectService serviceImplementation="com.gitee.util.GiteeProjectSettings"/>
        <projectService serviceImplementation="com.gitee.util.GiteeSharedProjectSettings"/>
        <projectService serviceImplementation="com.gitee.authentication.accounts.GiteeProjectDefaultAccountHolder"/>

        <!--  pullrequest start -->
        <projectService serviceImplementation="com.gitee.pullrequest.config.GiteePullRequestsProjectUISettings"/>
        <diff.DiffExtension implementation="com.gitee.pullrequest.comment.GiteePRReviewThreadsDiffExtension"/>
        <fileType name="GiteePullRequest" implementationClass="com.gitee.pullrequest.GiteePRFileType"/>
        <fileEditorProvider implementation="com.gitee.pullrequest.GiteePREditorProvider"/>
        <!--  pullrequest end -->

        <vcsAnnotationGutterActionProvider implementation="com.gitee.extensions.GiteeAnnotationGutterActionProvider"/>

        <projectConfigurable parentId="project.propVCSSupport.Mappings" groupWeight="-500" instance="com.gitee.ui.GiteeSettingsConfigurable"/>

        <statistics.applicationUsagesCollector implementation="com.gitee.authentication.accounts.GiteeAccountsStatisticsCollector"/>

        <openapi.vcs.ui.cloneDialog.VcsCloneDialogExtension implementation="com.gitee.ui.cloneDialog.GiteeCloneDialogExtension"/>

<!--        <registryKey key="gitee.action.pullrequest.state.useapi" defaultValue="false"-->
<!--                     description="If enabled merge/close API actions will be available instead of browser link. Reopen toolwindow to apply."/>-->
    </extensions>

    <projectListeners>
        <listener class="com.gitee.pullrequest.GiteePRToolWindowTabsManager$RemoteUrlsListener"
                  topic="com.intellij.dvcs.repo.VcsRepositoryMappingListener"
                  activeInHeadlessMode="false" activeInTestMode="false"/>
        <listener class="com.gitee.pullrequest.GiteePRToolWindowTabsManager$RemoteUrlsListener"
                  topic="git4idea.repo.GitRepositoryChangeListener"
                  activeInHeadlessMode="false" activeInTestMode="false"/>

        <listener class="com.gitee.ui.GiteePREditorContentSynchronizer$MyToolwindowListener" topic="com.intellij.openapi.wm.ex.ToolWindowManagerListener" />
    </projectListeners>

    <extensions defaultExtensionNs="Git4Idea">
        <GitHttpAuthDataProvider implementation="com.gitee.extensions.GiteeHttpAuthDataProvider"/>
        <gitRepositoryHostingService implementation="com.gitee.extensions.GiteeRepositoryHostingService"/>
    </extensions>

    <actions>
        <action id="Gitee.Share" class="com.gitee.actions.GiteeShareAction">
            <add-to-group group-id="Vcs.Import"/>
        </action>

        <action id="Gitee.Rebase" class="com.gitee.actions.GiteeRebaseAction">
            <add-to-group group-id="Git.Menu"/>
        </action>

        <action id="Gitee.Open.In.Browser" class="com.gitee.actions.GiteeOpenInBrowserActionGroup">
            <add-to-group group-id="EditorPopupMenu"/>
            <add-to-group group-id="ProjectViewPopupMenu"/>
            <add-to-group group-id="EditorTabPopupMenu"/>
            <add-to-group group-id="Git.LogContextMenu"/>
            <add-to-group group-id="Vcs.Log.ContextMenu" anchor="last"/>
            <add-to-group group-id="VcsHistoryActionsGroup" anchor="last"/>
            <add-to-group group-id="VcsHistoryActionsGroup.Toolbar"/>
        </action>

        <action id="Gitee.Create.Gist" class="com.gitee.actions.GiteeCreateGistAction">
            <add-to-group group-id="EditorPopupMenu"/>
            <add-to-group group-id="ProjectViewPopupMenu"/>
            <add-to-group group-id="EditorTabPopupMenu"/>
            <add-to-group group-id="ConsoleEditorPopupMenu"/>
        </action>

        <!--  pullrequest start -->
        <action id="Gitee.Create.Pull.Request" class="com.gitee.actions.GiteeCreatePullRequestAction">
            <add-to-group group-id="Git.Menu"/>
        </action>
        <action id="Gitee.View.Pull.Request" class="com.gitee.actions.GiteeViewPullRequestsAction">
            <add-to-group group-id="Git.Menu"/>
        </action>

        <group id="Gitee.PullRequest.ToolWindow.List.Popup">
            <action id="Gitee.PullRequest.Branch.Create"
                    class="com.gitee.pullrequest.action.GiteePullRequestCreateBranchAction"/>
            <reference id="Gitee.Open.In.Browser"/>
            <action id="Gitee.PullRequest.List.Refresh"
                    class="com.gitee.pullrequest.action.GiteePullRequestRefreshListAction"/>
        </group>

        <action id="Gitee.PullRequest.Preview.Refresh"
                class="com.gitee.pullrequest.action.GiteePullRequestRefreshDetailsAction"
                internal="true"/>
        <action id="Gitee.PullRequest.Preview.Refresh.Comments"
                class="com.gitee.pullrequest.action.GiteePullRequestRefreshCommentsAction"
                internal="true"/>
        <group>
            <action id="Gitee.PullRequest.Zip.Commits.Toggle"
                    class="com.gitee.pullrequest.ui.changes.GiteePRChangesBrowser$ToggleZipCommitsAction"/>

            <add-to-group group-id="ChangesView.GroupBy" anchor="last"/>
        </group>
        <!--  pullrequest end -->


    </actions>
</idea-plugin>
